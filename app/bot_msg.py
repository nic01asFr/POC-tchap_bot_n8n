from config import APP_VERSION, COMMAND_PREFIX, Config


class AlbertMsg:
    common_msg_prefixes = [
        "üëã Bonjour, je suis **Albert**",
        "ü§ñ Configuration actuelle",
        "\u26a0\ufe0f **Erreur**",
        "\u26a0\ufe0f **Commande inconnue**",
        "**La conversation a √©t√© remise √† z√©ro**",
        "ü§ñ Albert a √©chou√©",
    ]
    shorts = {
        "help": f"Pour retrouver ce message informatif, tapez `{COMMAND_PREFIX}aide`. Pour les geek tapez `{COMMAND_PREFIX}aide -v`.",
        "reset": f"Pour r√©-initialiser notre conversation, tapez `{COMMAND_PREFIX}reset`",
        "collections": f"Pour modifier l'ensemble des collections utilis√©es quand vous me posez une question, tapez `{COMMAND_PREFIX}collections list/use/unuse/info COLLECTION_NAME`",
        "conversation": f"Pour activer/d√©sactiver le mode conversation, tapez `{COMMAND_PREFIX}conversation`",
        "debug": f"Pour afficher des informations sur la configuration actuelle, `{COMMAND_PREFIX}debug`",
        "model": f"Pour modifier le mod√®le, tapez `{COMMAND_PREFIX}model MODEL_NAME`",
        "mode": f"Pour modifier le mode du mod√®le (c'est-√†-dire le mod√®le de prompt utilis√©), tapez `{COMMAND_PREFIX}mode MODE`",
        "sources": f"Pour obtenir les sources utilis√©es pour g√©n√©rer ma derni√®re r√©ponse, tapez `{COMMAND_PREFIX}sources`",
    }

    failed = "ü§ñ Albert a √©chou√© √† r√©pondre. Veuillez r√©essayez dans un moment."

    flush_start = "Nettoyage des collections RAG propres √† cette conversation..."

    flush_end = "Nettoyage des collections RAG termin√©."

    reset = "**La conversation a √©t√© remise √† z√©ro**. Vous pouvez n√©anmoins toujours r√©pondre dans un fil de discussion."

    user_not_allowed = "Albert est en phase de test et n'est pas encore disponible pour votre utilisateur. Contactez albert-contact@data.gouv.fr pour demander un acc√®s."

    domain_not_allowed = "Albert n'est pas encore disponible pour votre domaine. Merci de rester en contact, il sera disponible apr√®s une phase beta test."

    def error_debug(reason, config):
        api_url = getattr(config, 'albert_api_url', 'N/A')
        msg = f"\u26a0\ufe0f **Erreur**\n\n{reason}\n\n- Serveur Matrix: {config.matrix_home_server}"
        if api_url != 'N/A':
            msg = f"\u26a0\ufe0f **Albert API error**\n\n{reason}\n\n- Albert API URL: {api_url}\n- Matrix server: {config.matrix_home_server}"
        return msg

    def help(model_url, model_short_name, cmds):
        msg = "üëã Bonjour, je suis **Albert**, votre **assistant automatique d√©di√© aux questions l√©gales et administratives** mis √† disposition par la **DINUM**. Je suis actuellement en phase de **test**.\n\n"
        msg += f"J'utilise le mod√®le de langage _[{model_short_name}]({model_url})_ et j'ai √©t√© aliment√© par des bases de connaissances gouvernementales, comme les fiches pratiques de service-public.fr √©dit√©es par la Direction de l'information l√©gale et administrative (DILA).\n\n"
        msg += "Maintenant que nous avons fait plus connaissance, quelques **r√®gles pour m'utiliser** :\n\n"
        msg += "‚úÖ Vous pouvez m'attacher en pi√®ces jointes des documents pdf qui m'aideront √† r√©pondre plus efficacement.\n\n"
        msg += "üîÆ Ne m'utilisez pas pour √©laborer une d√©cision administrative individuelle.\n\n"
        msg += "‚ùå **Ne me transmettez pas** :\n"
        msg += "- des fichiers autres que pdf, ni des images;\n"
        msg += "- des donn√©es permettant de **vous** identifier ou **d'autres personnes** ;\n"
        msg += "- des donn√©es **confidentielles** ;\n\n"
        msg += "Enfin, quelques informations pratiques :\n\n"
        msg += "üõ†Ô∏è **Pour g√©rer notre conversation** :\n"
        msg += "- " + "\n- ".join(cmds)
        msg += "\n\n"
        msg += "üìÅ **Sur l'usage des donn√©es**\nLes conversations sont stock√©es de mani√®re anonyme. Elles me permettent de contextualiser les conversations et l'√©quipe qui me d√©veloppe les utilise pour m'√©valuer et analyser mes performances.\n\n"
        msg += "üìØ Nous contacter : albert-contact@data.gouv.fr"

        return msg

    def commands(cmds):
        msg = "Les commandes sp√©ciales suivantes sont disponibles :\n\n"
        msg += "- " + "\n- ".join(cmds)  # type: ignore
        return msg

    def unknown_command(cmds_msg):
        msg = f"\u26a0\ufe0f **Commande inconnue**\n\n{cmds_msg}"
        return msg

    def reset_notif(delay_min):
        msg = f"Comme vous n'avez pas continu√© votre conversation avec Albert depuis plus de {delay_min} minutes, **la conversation a √©t√© automatiquement remise √† z√©ro**. Vous pouvez n√©anmoins toujours r√©pondre dans un fil de discussion.\n\n"
        msg += "Entrez **!aide** pour obtenir plus d'informatin sur ma param√©trisatiion."
        return msg

    def debug(config: Config):
        msg = "ü§ñ Configuration actuelle :\n\n"
        msg += f"- Version: {APP_VERSION}\n"
        
        # V√©rifier si nous sommes en mode webhook ou Albert
        if hasattr(config, 'webhook_enabled') and config.webhook_enabled:
            msg += f"- Mode: Webhook\n"
            msg += f"- Webhook host: {config.webhook_host}\n"
            msg += f"- Webhook port: {config.webhook_port}\n"
        
        # Ajouter les infos Albert si disponibles
        api_url = getattr(config, 'albert_api_url', None)
        if api_url:
            msg += f"- API: {api_url}\n"
            msg += f"- Model: {getattr(config, 'albert_model', 'N/A')}\n"
            msg += f"- Mode: {getattr(config, 'albert_mode', 'N/A')}\n"
            msg += f"- With history: {getattr(config, 'albert_with_history', False)}\n"
        
        return msg
